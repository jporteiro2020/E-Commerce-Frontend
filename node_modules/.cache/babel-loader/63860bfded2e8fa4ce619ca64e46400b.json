{"ast":null,"code":"var _s = $RefreshSig$();\n\n/*import React, {  } from \"react\";\r\nimport L from 'leaflet';\r\n\r\nfunction Map() {\r\n    if (!navigator.geolocation){\r\n        console.log(\"Geolocation is not supported by your browser\");\r\n        return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n\r\n\r\n    componentDidMount() {\r\n        // create map\r\n        this.map = L.map('mapid', {\r\n            center: [49.8419, 24.0315],\r\n            zoom: 16,\r\n            layers: [\r\n                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                }),\r\n            ]\r\n        });\r\n    }\r\n  \r\n    render() {\r\n        <main id=\"main\">\r\n            <div id=\"contenedor\">\r\n                <div id=\"mapid\"></div>\r\n                <div class=\"horario\">\r\n                    <p>Nuestro horario de atención es:</p>\r\n                    <ul>\r\n                        <li>De Lunes a Viernes de 9:00 a 13 y 14 a 19 hrs</li>\r\n                        <li>Los Sábados de  9 a 14hrs</li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"ubicacion\">\r\n                    <p>Dirección:</p>\r\n                    <ul>\r\n                        <li>{direccion}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    }\r\n}\r\n  \r\nexport default Map;*/\nimport { useState, useEffect } from 'react';\nconst defaultSettings = {\n  enableHighAccuracy: false,\n  timeout: Infinity,\n  maximumAge: 0\n};\nexport const usePosition = (watch = false, settings = defaultSettings) => {\n  _s();\n\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({\n    coords,\n    timestamp\n  }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      accuracy: coords.accuracy,\n      speed: coords.speed,\n      timestamp\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    if (!navigator || !navigator.geolocation) {\n      setError('Geolocation is not supported');\n      return;\n    }\n\n    let watcher = null;\n\n    if (watch) {\n      watcher = navigator.geolocation.watchPosition(onChange, onError, settings);\n    } else {\n      navigator.geolocation.getCurrentPosition(onChange, onError, settings);\n    }\n\n    return () => watcher && navigator.geolocation.clearWatch(watcher);\n  }, [settings.enableHighAccuracy, settings.timeout, settings.maximumAge]);\n  return { ...position,\n    error\n  };\n};\n\n_s(usePosition, \"dynHhIjHiH1gzjmYywOPM1LY5S8=\");","map":{"version":3,"sources":["C:/Users/Jonatan Porteiro/Documents/Proyecto Senpai/tienda-react/src/components/mapa.jsx"],"names":["useState","useEffect","defaultSettings","enableHighAccuracy","timeout","Infinity","maximumAge","usePosition","watch","settings","position","setPosition","error","setError","onChange","coords","timestamp","latitude","longitude","accuracy","speed","onError","message","navigator","geolocation","watcher","watchPosition","getCurrentPosition","clearWatch"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,kBAAkB,EAAE,KADE;AAEtBC,EAAAA,OAAO,EAAEC,QAFa;AAGtBC,EAAAA,UAAU,EAAE;AAHU,CAAxB;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG,KAAT,EAAgBC,QAAQ,GAAGP,eAA3B,KAA+C;AAAA;;AACxE,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMc,QAAQ,GAAG,CAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,KAAyB;AACxCL,IAAAA,WAAW,CAAC;AACVM,MAAAA,QAAQ,EAAEF,MAAM,CAACE,QADP;AAEVC,MAAAA,SAAS,EAAEH,MAAM,CAACG,SAFR;AAGVC,MAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAHP;AAIVC,MAAAA,KAAK,EAAEL,MAAM,CAACK,KAJJ;AAKVJ,MAAAA;AALU,KAAD,CAAX;AAOD,GARD;;AAUA,QAAMK,OAAO,GAAIT,KAAD,IAAW;AACzBC,IAAAA,QAAQ,CAACD,KAAK,CAACU,OAAP,CAAR;AACD,GAFD;;AAIArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACsB,SAAD,IAAc,CAACA,SAAS,CAACC,WAA7B,EAA0C;AACxCX,MAAAA,QAAQ,CAAC,8BAAD,CAAR;AACA;AACD;;AAED,QAAIY,OAAO,GAAG,IAAd;;AACA,QAAIjB,KAAJ,EAAW;AACTiB,MAAAA,OAAO,GACLF,SAAS,CAACC,WAAV,CAAsBE,aAAtB,CAAoCZ,QAApC,EAA8CO,OAA9C,EAAuDZ,QAAvD,CADF;AAED,KAHD,MAGO;AACLc,MAAAA,SAAS,CAACC,WAAV,CAAsBG,kBAAtB,CAAyCb,QAAzC,EAAmDO,OAAnD,EAA4DZ,QAA5D;AACD;;AAED,WAAO,MAAMgB,OAAO,IAAIF,SAAS,CAACC,WAAV,CAAsBI,UAAtB,CAAiCH,OAAjC,CAAxB;AACD,GAfQ,EAeN,CACDhB,QAAQ,CAACN,kBADR,EAEDM,QAAQ,CAACL,OAFR,EAGDK,QAAQ,CAACH,UAHR,CAfM,CAAT;AAqBA,SAAO,EAAC,GAAGI,QAAJ;AAAcE,IAAAA;AAAd,GAAP;AACD,CAxCM;;GAAML,W","sourcesContent":["/*import React, {  } from \"react\";\r\nimport L from 'leaflet';\r\n\r\nfunction Map() {\r\n    if (!navigator.geolocation){\r\n        console.log(\"Geolocation is not supported by your browser\");\r\n        return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n\r\n\r\n    componentDidMount() {\r\n        // create map\r\n        this.map = L.map('mapid', {\r\n            center: [49.8419, 24.0315],\r\n            zoom: 16,\r\n            layers: [\r\n                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                }),\r\n            ]\r\n        });\r\n    }\r\n  \r\n    render() {\r\n        <main id=\"main\">\r\n            <div id=\"contenedor\">\r\n                <div id=\"mapid\"></div>\r\n                <div class=\"horario\">\r\n                    <p>Nuestro horario de atención es:</p>\r\n                    <ul>\r\n                        <li>De Lunes a Viernes de 9:00 a 13 y 14 a 19 hrs</li>\r\n                        <li>Los Sábados de  9 a 14hrs</li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"ubicacion\">\r\n                    <p>Dirección:</p>\r\n                    <ul>\r\n                        <li>{direccion}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    }\r\n}\r\n  \r\nexport default Map;*/\r\n\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst defaultSettings = {\r\n  enableHighAccuracy: false,\r\n  timeout: Infinity,\r\n  maximumAge: 0,\r\n};\r\n\r\nexport const usePosition = (watch = false, settings = defaultSettings) => {\r\n  const [position, setPosition] = useState({});\r\n  const [error, setError] = useState(null);\r\n\r\n  const onChange = ({coords, timestamp}) => {\r\n    setPosition({\r\n      latitude: coords.latitude,\r\n      longitude: coords.longitude,\r\n      accuracy: coords.accuracy,\r\n      speed: coords.speed,\r\n      timestamp,\r\n    });\r\n  };\r\n\r\n  const onError = (error) => {\r\n    setError(error.message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!navigator || !navigator.geolocation) {\r\n      setError('Geolocation is not supported');\r\n      return;\r\n    }\r\n\r\n    let watcher = null;\r\n    if (watch) {\r\n      watcher =\r\n        navigator.geolocation.watchPosition(onChange, onError, settings);\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition(onChange, onError, settings);\r\n    }\r\n\r\n    return () => watcher && navigator.geolocation.clearWatch(watcher);\r\n  }, [\r\n    settings.enableHighAccuracy,\r\n    settings.timeout,\r\n    settings.maximumAge,\r\n  ]);\r\n\r\n  return {...position, error};\r\n};"]},"metadata":{},"sourceType":"module"}